{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../lib/reveal-md/build/index.js","webpack:///./src/reveal.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","jsonpScriptSrc","p","exports","module","l","e","promises","installedChunkData","promise","Promise","resolve","reject","onScriptComplete","script","document","createElement","charset","timeout","nc","setAttribute","src","error","Error","event","onerror","onload","clearTimeout","chunk","errorType","type","realSrc","target","message","name","request","undefined","setTimeout","head","appendChild","all","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","err","console","jsonpArray","window","oldJsonpFunction","slice","options","cdn","css","js","RevealMd","revealMdOptions","revealOptions","this","raw","queue","beforeReady","ready","$","_headers","JSON","parse","stringify","mdConverter","showdown","Converter","setFlavor","markdown","forEach","x","addExtension","pugFilters","text","makeHtml","pug","pugConverter","compile","filters","isBrowser","cheerio","load","h","outerHTML","init","$body","revealMd","href","append","attr","class","className","rel","html","id","body","assign","async","addEventListener","reveal","Reveal","initialize","onReady","it","slide","sync","matter","content","headers","setBody","reverseOffset","newRaw","split","map","el","sectionRaw","parseSlide","comment","lines","includes","div","style","display","innerHTML","ss","y","thisRaw","container","subSection","getSlide","section","oldContainers","remove","each","_","hljs","highlightBlock","querySelector","Array","from","querySelectorAll","filter","setTitle","title","fn","isReady","listener","removeOnDone","removeEventListener","$title","getElementsByTagName","innerText","lang","commentLines","contentLines","isContent","line","startsWith","substr","join","pre","resultArray","commentStr","hSlide","vSlides","children","dst","fs","normalize","offline","ensureFileSync","writeFileSync","xml","theme","getElementById","link","configure"],"mappings":"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","file":"js/reveal.dad5c298.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"reveal\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"js/\" + ({}[chunkId]||chunkId) + \".\" + {\"chunk-2d229c04\":\"11e819d4\",\"chunk-37713494\":\"49045ca2\"}[chunkId] + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([2,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import \"./reveal-d\";\nimport hljs from \"highlight.js\";\nimport pug from \"hyperpug\";\nimport showdown from \"showdown\";\nimport h from \"hyperscript\";\nimport matter from \"gray-matter\";\nimport cheerio from \"cheerio\";\nexport const options = {\n    cdn: \"https://cdn.jsdelivr.net/npm/reveal.js@3.8.0/\",\n    css: [\n        \"css/reveal.css\"\n    ],\n    js: [\n        \"js/reveal.min.js\"\n    ]\n};\nexport class RevealMd {\n    constructor(revealMdOptions = {}, revealOptions = {}) {\n        this.revealMdOptions = revealMdOptions;\n        this.raw = [[]];\n        this.queue = {\n            beforeReady: [],\n            ready: []\n        };\n        this.$ = null;\n        this._headers = {};\n        this.revealOptions = JSON.parse(JSON.stringify(options));\n        this.revealOptions.cdn = revealOptions.cdn || this.revealOptions.cdn;\n        if (revealOptions.css) {\n            this.revealOptions.css.push(...revealOptions.css);\n        }\n        if (revealOptions.js) {\n            this.revealOptions.js.push(...revealOptions.js);\n        }\n        this.mdConverter = new showdown.Converter();\n        this.mdConverter.setFlavor(\"github\");\n        if (revealMdOptions.markdown) {\n            revealMdOptions.markdown.forEach((x) => this.mdConverter.addExtension(x));\n        }\n        const pugFilters = {\n            markdown: (text) => {\n                return this.mdConverter.makeHtml(text);\n            },\n            ...(revealMdOptions.pug || {})\n        };\n        this.pugConverter = pug.compile({ filters: pugFilters });\n        if (!this.isBrowser) {\n            this.$ = cheerio.load(h(\"html\", [\n                h(\"head\", [\n                    h(\"meta\", { charset: \"utf-8\" })\n                ]),\n                h(\"body\", [\n                    h(\".reveal\", [\n                        h(\".slides\")\n                    ])\n                ])\n            ]).outerHTML);\n        }\n        this.init();\n    }\n    get isBrowser() {\n        return typeof window !== \"undefined\";\n    }\n    get headers() {\n        return this._headers;\n    }\n    set headers(h) {\n        if (h.theme) {\n            if (this.$) {\n                this.$(\"#reveal-theme\").attr(\"href\", this.revealOptions.cdn + `css/theme/${h.theme}.css`);\n            }\n            else {\n                document.getElementById(\"reveal-theme\").href = this.revealOptions.cdn + `css/theme/${h.theme}.css`;\n            }\n        }\n        if (this.$) {\n            this.$(\"link.reveal-css\").each((_, el) => {\n                const link = el;\n                if (!link.href.startsWith(this.revealOptions.cdn)) {\n                    link.href = this.revealOptions.cdn + link.href;\n                }\n            });\n        }\n        else {\n            Array.from(document.querySelectorAll(\"link.reveal-css\")).forEach((el) => {\n                const link = el;\n                if (!link.href.startsWith(this.revealOptions.cdn)) {\n                    link.href = this.revealOptions.cdn + link.href;\n                }\n            });\n        }\n        if (this.$) {\n            this.$(\"script.reveal-js\").each((_, el) => {\n                const script = el;\n                if (!script.src.startsWith(this.revealOptions.cdn)) {\n                    script.src = this.revealOptions.cdn + script.src;\n                }\n            });\n        }\n        else {\n            Array.from(document.querySelectorAll(\"script.reveal-js\")).forEach((el) => {\n                const script = el;\n                if (!script.src.startsWith(this.revealOptions.cdn)) {\n                    script.src = this.revealOptions.cdn + script.src;\n                }\n            });\n        }\n        this.onReady((reveal) => {\n            reveal.configure(h);\n        });\n        this._headers = h;\n    }\n    init() {\n        const window = this.window;\n        if (window) {\n            window.revealMd = this;\n        }\n        let $body;\n        if (this.$) {\n            $body = this.$(\"body\");\n            for (const href of this.revealOptions.css) {\n                $body.append(this.$(\"<link>\").attr({\n                    class: \"reveal-css\",\n                    className: \"reveal-css\",\n                    href: this.revealOptions.cdn + href,\n                    rel: \"stylesheet\",\n                    type: \"text/css\"\n                }).html() || \"\");\n            }\n            $body.append(this.$(\"<link>\").attr({\n                id: \"reveal-theme\",\n                class: \"reveal-css\",\n                className: \"reveal-css\",\n                href: this.revealOptions.cdn + \"css/theme/white.css\",\n                rel: \"stylesheet\",\n                type: \"text/css\"\n            }).html() || \"\");\n        }\n        else {\n            for (const href of this.revealOptions.css) {\n                document.body.appendChild(Object.assign(document.createElement(\"link\"), {\n                    className: \"reveal-css\",\n                    href: this.revealOptions.cdn + href,\n                    rel: \"stylesheet\",\n                    type: \"text/css\"\n                }));\n            }\n            document.body.appendChild(Object.assign(document.createElement(\"link\"), {\n                id: \"reveal-theme\",\n                className: \"reveal-css\",\n                href: this.revealOptions.cdn + \"css/theme/white.css\",\n                rel: \"stylesheet\",\n                type: \"text/css\"\n            }));\n        }\n        for (let js of this.revealOptions.js) {\n            if (!this.$) {\n                if (typeof js === \"string\") {\n                    document.body.appendChild(Object.assign(document.createElement(\"script\"), {\n                        className: \"reveal-js\",\n                        type: \"text/javascript\",\n                        src: this.revealOptions.cdn + js\n                    }));\n                }\n                else {\n                    const { async, src } = js;\n                    document.body.appendChild(Object.assign(document.createElement(\"script\"), {\n                        className: \"reveal-js\",\n                        async,\n                        type: \"text/javascript\",\n                        src: this.revealOptions.cdn + src\n                    }));\n                }\n            }\n            else {\n                if (typeof js === \"string\") {\n                    $body.append(this.$(\"<script>\").attr({\n                        class: \"reveal-js\",\n                        className: \"reveal-js\",\n                        type: \"text/javascript\",\n                        src: this.revealOptions.cdn + js\n                    }).html() || \"\");\n                }\n                else {\n                    const { async, src } = js;\n                    $body.append(this.$(\"<script>\").attr({\n                        class: \"reveal-js\",\n                        className: \"reveal-js\",\n                        async,\n                        type: \"text/javascript\",\n                        src: this.revealOptions.cdn + src\n                    }).html() || \"\");\n                }\n            }\n        }\n        if (this.window) {\n            this.window.addEventListener(\"load\", () => {\n                const reveal = this.window.Reveal;\n                if (reveal) {\n                    reveal.initialize();\n                    this.onReady(() => {\n                        if (this.queue.ready.length > 0) {\n                            this.queue.ready.forEach((it) => it(reveal));\n                            reveal.slide(-1, -1, -1);\n                            reveal.sync();\n                        }\n                    });\n                }\n            });\n        }\n    }\n    get window() {\n        if (this.isBrowser) {\n            return window;\n        }\n        else {\n            return null;\n        }\n    }\n    get reveal() {\n        return this.window ? this.window.Reveal : null;\n    }\n    update(markdown) {\n        const { data, content } = matter(markdown);\n        this.headers = data;\n        const setBody = () => {\n            let reverseOffset = 0;\n            const newRaw = content.split(/\\r?\\n(?:---|===)\\r?\\n/g).map((el, x) => {\n                const sectionRaw = this.parseSlide(el);\n                if (sectionRaw.comment) {\n                    const lines = sectionRaw.comment.split(\"\\n\");\n                    if (lines.includes(\"hidden\") || lines.includes(\"global\")) {\n                        if (lines.includes(\"global\")) {\n                            if (this.$) {\n                                this.$(\"head\").append(this.$(\"<div style='display: none;'>\").append(sectionRaw.content).html() || \"\");\n                            }\n                            else {\n                                const div = document.createElement(\"div\");\n                                div.style.display = \"none\";\n                                div.innerHTML = sectionRaw.content;\n                                document.head.appendChild(div);\n                            }\n                        }\n                        reverseOffset++;\n                        return null;\n                    }\n                }\n                x -= reverseOffset;\n                this.raw[x] = this.raw[x] || [];\n                return el.split(/\\r?\\n--\\r?\\n/g).map((ss, y) => {\n                    const thisRaw = this.parseSlide(ss);\n                    if (!this.raw[x][y] || (this.raw[x][y] && this.raw[x][y].raw !== ss)) {\n                        if (this.$) {\n                            const container = this.$(\"<div class='container'>\");\n                            container.html(thisRaw.content);\n                            let subSection = this.getSlide(x, y);\n                            let section = this.getSlide(x);\n                            if (section && subSection) {\n                                const oldContainers = this.$(\".container\", this.$(subSection));\n                                oldContainers.remove();\n                                this.$(subSection).append(container.html() || \"\");\n                            }\n                            else {\n                                const ss = this.$(\"<section>\");\n                                ss.append(container.html() || \"\");\n                                if (section) {\n                                    this.$(section).append(ss.html() || \"\");\n                                }\n                                else {\n                                    const s = this.$(\"<section>\");\n                                    s.append(ss.html() || \"\");\n                                    this.$(\".reveal .slides\").append(s.html() || \"\");\n                                }\n                            }\n                            this.$(\"pre code\", container).each((_, el) => {\n                                hljs.highlightBlock(el);\n                            });\n                        }\n                        else {\n                            const container = document.createElement(\"div\");\n                            container.className = \"container\";\n                            container.innerHTML = thisRaw.content;\n                            let subSection = this.getSlide(x, y);\n                            let section = this.getSlide(x);\n                            if (section && subSection) {\n                                subSection.innerHTML = \"\";\n                                subSection.appendChild(container);\n                            }\n                            else {\n                                const ss = document.createElement(\"section\");\n                                ss.appendChild(container);\n                                if (section) {\n                                    section.appendChild(ss);\n                                }\n                                else {\n                                    const s = document.createElement(\"section\");\n                                    s.appendChild(ss);\n                                    document.querySelector(\".reveal .slides\").appendChild(s);\n                                }\n                            }\n                            Array.from(container.querySelectorAll(\"pre code\")).forEach((el) => {\n                                hljs.highlightBlock(el);\n                            });\n                        }\n                    }\n                    return thisRaw;\n                });\n            }).filter((el) => el !== null);\n            this.raw.map((el, x) => {\n                el.map((ss, j) => {\n                    const y = el.length - j - 1;\n                    if (!newRaw[x] || !newRaw[x][y]) {\n                        const subSection = this.getSlide(x, y);\n                        if (subSection) {\n                            if (this.$) {\n                                this.$(subSection).remove();\n                            }\n                            else {\n                                subSection.remove();\n                            }\n                        }\n                    }\n                });\n                if (!newRaw[x]) {\n                    const section = this.getSlide(x);\n                    if (section) {\n                        if (this.$) {\n                            this.$(section).remove();\n                        }\n                        else {\n                            section.remove();\n                        }\n                    }\n                }\n            });\n            this.raw = newRaw;\n        };\n        if (this.isBrowser) {\n            this.onReady(() => setBody());\n        }\n        else {\n            setBody();\n        }\n        this.setTitle(this.headers.title);\n    }\n    onReady(fn) {\n        const reveal = this.reveal;\n        if (reveal && reveal.isReady()) {\n            fn(reveal);\n            // reveal.slide(-1, -1, -1);\n            // reveal.sync();\n        }\n        else {\n            this.queue.ready.push(fn);\n        }\n    }\n    once(type, listener) {\n        const reveal = this.reveal;\n        if (reveal && reveal.isReady) {\n            const removeOnDone = () => {\n                listener();\n                reveal.removeEventListener(type, removeOnDone);\n            };\n            reveal.addEventListener(type, removeOnDone);\n        }\n        else {\n            this.queue.ready.push(listener);\n        }\n    }\n    setTitle(s) {\n        if (this.$) {\n            let $title = this.$(\"title\");\n            if ($title.length === 0) {\n                const title = this.$(\"<title>\");\n                title.text(s || \"\");\n                this.$(\"head\").append(title.html() || \"\");\n            }\n            else {\n                $title.text(s || \"\");\n            }\n        }\n        else {\n            const title = document.getElementsByTagName(\"title\")[0];\n            if (title) {\n                title.text = s || \"\";\n            }\n            else {\n                document.head.appendChild(Object.assign(document.createElement(\"title\"), {\n                    innerText: s || \"\"\n                }));\n            }\n        }\n    }\n    parseSlide(text) {\n        const raw = text;\n        let lang = \"\";\n        let commentLines = [];\n        let contentLines = [];\n        let isContent = true;\n        for (const line of text.split(\"\\n\")) {\n            isContent = true;\n            if (contentLines.length === 0 && line.startsWith(\"// \")) {\n                commentLines.push(line.substr(3));\n                isContent = false;\n            }\n            if (lang && line.startsWith(\"```\")) {\n                break;\n            }\n            if (contentLines.length === 0 && line.startsWith(\"```\")) {\n                lang = line.substr(3);\n                isContent = false;\n            }\n            if (isContent) {\n                contentLines.push(line);\n            }\n        }\n        lang = lang || \"markdown\";\n        const comment = commentLines.join(\"\\n\");\n        let html = contentLines.join(\"\\n\") || text;\n        switch (lang) {\n            case \"markdown\":\n                html = this.mdConverter.makeHtml(html);\n                break;\n            case \"html\": break;\n            case \"pug\":\n                html = this.pugConverter(html);\n                break;\n            default:\n                const pre = h(\"pre\");\n                pre.innerText = html;\n                html = pre.outerHTML;\n        }\n        return { lang, comment, content: html, raw };\n    }\n    buildSlide(slide) {\n        const resultArray = [];\n        if (slide.comment) {\n            for (const line of slide.comment.split(\"\\n\")) {\n                resultArray.push(`// ${line}`);\n            }\n        }\n        const commentStr = \"```\";\n        if (slide.lang !== \"markdown\") {\n            resultArray.push(`${commentStr}${slide.lang || \"html\"}`);\n        }\n        for (const line of slide.content.split(\"\\n\")) {\n            resultArray.push(line);\n        }\n        if (slide.lang !== \"markdown\") {\n            resultArray.push(commentStr);\n        }\n        return resultArray.join(\"\\n\");\n    }\n    getSlide(x, y) {\n        let hSlide;\n        if (this.$) {\n            const s = this.$(\".slides > section\");\n            hSlide = s[x];\n            if (typeof y === \"number\") {\n                if (hSlide) {\n                    const vSlides = this.$(hSlide).children(\"section\");\n                    return vSlides[y];\n                }\n                return undefined;\n            }\n        }\n        else {\n            const s = document.querySelectorAll(\".slides > section\");\n            hSlide = s[x];\n            if (typeof y === \"number\") {\n                if (hSlide) {\n                    const vSlides = hSlide.getElementsByTagName(\"section\");\n                    return vSlides[y];\n                }\n                return undefined;\n            }\n        }\n        return hSlide;\n    }\n    /**\n     *\n     * @param dst Folder name to store the export\n     */\n    async export(dst) {\n        const fs = await import(\"fs-extra\");\n        const { normalize } = await import(\"path\");\n        if (this.headers.offline) {\n            const headers = this.headers;\n            headers.offline = false;\n            this.headers = headers;\n            // const scraper = (await import(\"website-scraper\")).default;\n            // const SaveToExistingDirectoryPlugin = require('website-scraper-existing-directory');\n            // await scraper({\n            //   urls: [`file://${dst}/index.html`],\n            //   directory: dst,\n            //   // @ts-ignore\n            //   plugins: [ new SaveToExistingDirectoryPlugin() ]\n            // });\n        }\n        fs.ensureFileSync(normalize(`${dst}/index.html`));\n        fs.writeFileSync(normalize(`${dst}/index.html`), this.$.xml());\n    }\n}\nexport default RevealMd;\n","import RevealMd from \"@patarapolw/reveal-md\";\nnew RevealMd();"],"sourceRoot":""}